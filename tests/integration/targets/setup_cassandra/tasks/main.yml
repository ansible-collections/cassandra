---
# (c) 2019,  Rhys Campbell <rhys.james.campbell@googlemail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ============================================================
- name: Get Original Python
  shell: python --version
  register: original_python
  when: ansible_os_family == 'Debian'

- name: Start Cassandra service if it is installed
  service:
    name: "{{ cassandra_service }}"
    state: "started"
  ignore_errors: yes
  register: cass

- pause:
    seconds: 30
  when:
    - cass.changed is defined
    - cass.changed == True

- name: Test nodetool without auth from shell
  command: nodetool status
  register: nt
  ignore_errors: yes

- name: Remove auth from the Cassandra instance if it is configured
  block:
    - name: Include tasks to remove auth
      include_tasks: cassandra_deauth.yml
  when:
    - nt.stderr is defined
    - "'Authentication failed! Credentials required' in nt.stderr"  # TODO Check for auth required msg

- name: Include vars for os family
  include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Install OpenJDK package
  yum:
    name: "{{ openjdk }}"
    state: present
  when: ansible_os_family == 'RedHat'

- name: Setup Cassandra yum repo
  yum_repository:
    name: "{{ cassandra_yum.name }}"
    description: "{{ cassandra_yum.description }}"
    baseurl: "{{ cassandra_yum.baseurl }}"
    enabled: "{{ cassandra_yum.enabled }}"
    gpgcheck: "{{ cassandra_yum.gpgcheck }}"
    gpgkey: "{{ cassandra_yum.gpgkey }}"
  when: ansible_os_family == 'RedHat'

- name: Install cassandra yum package
  yum:
    name: "{{ cassandra_yum_pkg }}"
    state: present
  when: ansible_os_family == 'RedHat'
  notify:
    - redhat_remove_cassandra

- name: Add an Apt keys for Cassandra
  apt_key:
    url: "{{ cassandra_deb.gpgkey }}"
    state: present
  when: ansible_os_family == 'Debian'

- name: Install python-apt
  shell: apt -y install python-apt
  when: ansible_os_family == 'Debian'

- name: Setup Cassandra apt repo
  apt_repository:
    repo: "{{ cassandra_deb.repo }}"
    state: present
  when: ansible_os_family == 'Debian'

- name: Install cassandra deb package
  apt:
    name: "{{ cassandra_deb_pkg }}"
    state: present
    force: yes
  when: ansible_os_family == 'Debian'
  notify: debian_remove_cassandra

- name: Adjust heap size
  lineinfile:
    path: "{{ cassandra_env_file }}"
    regexp: "^MAX_HEAP_SIZE="
    line: "MAX_HEAP_SIZE=256M"

- name: Replace default cassandra init script - RedHat 7
  copy:
    src: cassandra
    dest: /etc/init.d/cassandra
    owner: root
    group: root
    mode: 0755
  when: ansible_os_family == "RedHat"

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start Cassandra service
  service:
    name: "{{ cassandra_service }}"
    enabled: "yes"
    state: "restarted"

- name: Allow a little time for Cassandra to start listening on ports
  wait_for:
    port: "{{ item.port }}"
    host: "{{ item.host }}"
    delay: 10
    timeout: 300
  with_items:
    - { "host": "0.0.0.0", "port": 9042 }
    - { "host": "127.0.0.1", "port": 7199 }

# c* deb package pulls down py2.7 and sets it as default
- name: Get current python
  shell: python --version
  register: current_python
  when: ansible_os_family == "Debian"

- name: Set Python version on Debian flavours
  block:

    - shell: update-alternatives --install /usr/bin/python python {{ item.python_path }} {{ item.priority }}
      with_items:
        - { "python_path": "/usr/bin/python3.9", "priority": 1 }
        - { "python_path": "/usr/bin/python2.7", "priority": 2 }

    - shell: update-alternatives --set python /usr/bin/python3.9

    - shell: update-alternatives --install /usr/local/bin/pip pip {{ item.pip_path }} {{ item.priority }}
      with_items:
        - { "pip_path": "/usr/bin/pip3.9", "priority": 1 }
        - { "pip_path": "/usr/bin/pip2.7", "priority": 2 }

    - shell: update-alternatives --set pip /usr/bin/pip3.9
  when:
    - ansible_os_family == "Debian"
    - "'Python 2' in current_python"
